#!/bin/bash

echo "=== Installation des Cannabis-Dokumentationssystems ==="

# 1. System aktualisieren und Grundvoraussetzungen installieren
echo ">>> System aktualisieren..."
sudo apt update -y && sudo apt upgrade -y

echo ">>> Benötigte Pakete installieren..."
sudo apt install -y python3 python3-pip python3-venv nginx git

# 2. Virtuelle Python-Umgebung einrichten
echo ">>> Virtuelle Umgebung einrichten..."
mkdir -p /var/www/cannabis_app
cd /var/www/cannabis_app
python3 -m venv venv
source venv/bin/activate

# 3. Flask und Abhängigkeiten installieren
echo ">>> Flask und Abhängigkeiten installieren..."
pip install flask flask-sqlalchemy gunicorn

# 4. Beispielanwendung erstellen
echo ">>> Beispielanwendung erstellen..."
cat << 'EOF' > /var/www/cannabis_app/app.py
from flask import Flask, render_template, request, redirect, url_for
from flask_sqlalchemy import SQLAlchemy
from datetime import datetime

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///grow_data.db'
db = SQLAlchemy(app)

class GrowData(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    date = db.Column(db.Date, nullable=False, default=datetime.utcnow)
    ph = db.Column(db.Float, nullable=False)
    ec = db.Column(db.Float, nullable=False)
    water_temp = db.Column(db.Float, nullable=False)
    air_temp = db.Column(db.Float, nullable=False)
    humidity = db.Column(db.Float, nullable=False)
    notes = db.Column(db.Text, nullable=True)

@app.route('/')
def index():
    grow_data = GrowData.query.all()
    return render_template('index.html', grow_data=grow_data)

@app.route('/add', methods=['GET', 'POST'])
def add_data():
    if request.method == 'POST':
        new_data = GrowData(
            date=datetime.strptime(request.form['date'], '%Y-%m-%d'),
            ph=request.form['ph'],
            ec=request.form['ec'],
            water_temp=request.form['water_temp'],
            air_temp=request.form['air_temp'],
            humidity=request.form['humidity'],
            notes=request.form['notes']
        )
        db.session.add(new_data)
        db.session.commit()
        return redirect(url_for('index'))
    return render_template('add.html')

if __name__ == "__main__":
    db.create_all()
    app.run(host="0.0.0.0", port=5000)
EOF

# 5. HTML-Vorlagen erstellen
echo ">>> HTML-Vorlagen erstellen..."
mkdir -p /var/www/cannabis_app/templates
cat << 'EOF' > /var/www/cannabis_app/templates/index.html
<!DOCTYPE html>
<html>
<head>
    <title>Grow Dashboard</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <h1>Grow Dashboard</h1>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Datum</th>
                    <th>pH</th>
                    <th>EC</th>
                    <th>Wassertemperatur</th>
                    <th>Lufttemperatur</th>
                    <th>Luftfeuchtigkeit</th>
                    <th>Notizen</th>
                </tr>
            </thead>
            <tbody>
                {% for data in grow_data %}
                <tr>
                    <td>{{ data.date }}</td>
                    <td>{{ data.ph }}</td>
                    <td>{{ data.ec }}</td>
                    <td>{{ data.water_temp }}</td>
                    <td>{{ data.air_temp }}</td>
                    <td>{{ data.humidity }}</td>
                    <td>{{ data.notes }}</td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
        <a href="/add" class="btn btn-primary">Neue Daten hinzufügen</a>
    </div>
</body>
</html>
EOF

cat << 'EOF' > /var/www/cannabis_app/templates/add.html
<!DOCTYPE html>
<html>
<head>
    <title>Neue Daten hinzufügen</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <h1>Neue Daten hinzufügen</h1>
        <form method="post">
            <div class="mb-3">
                <label for="date" class="form-label">Datum</label>
                <input type="date" class="form-control" id="date" name="date" required>
            </div>
            <div class="mb-3">
                <label for="ph" class="form-label">pH</label>
                <input type="number" class="form-control" id="ph" name="ph" step="0.01" required>
            </div>
            <div class="mb-3">
                <label for="ec" class="form-label">EC</label>
                <input type="number" class="form-control" id="ec" name="ec" step="0.01" required>
            </div>
            <div class="mb-3">
                <label for="water_temp" class="form-label">Wassertemperatur</label>
                <input type="number" class="form-control" id="water_temp" name="water_temp" step="0.01" required>
            </div>
            <div class="mb-3">
                <label for="air_temp" class="form-label">Lufttemperatur</label>
                <input type="number" class="form-control" id="air_temp" name="air_temp" step="0.01" required>
            </div>
            <div class="mb-3">
                <label for="humidity" class="form-label">Luftfeuchtigkeit</label>
                <input type="number" class="form-control" id="humidity" name="humidity" step="0.01" required>
            </div>
            <div class="mb-3">
                <label for="notes" class="form-label">Notizen</label>
                <textarea class="form-control" id="notes" name="notes"></textarea>
            </div>
            <button type="submit" class="btn btn-primary">Speichern</button>
        </form>
    </div>
</body>
</html>
EOF

# 6. Gunicorn einrichten
echo ">>> Gunicorn einrichten..."
cat << 'EOF' > /var/www/cannabis_app/gunicorn_config.py
bind = "0.0.0.0:5000"
workers = 3
EOF

# 7. Nginx konfigurieren
echo ">>> Nginx konfigurieren..."
cat << 'EOF' > /etc/nginx/sites-available/cannabis_app
server {
    listen 80;
    server_name localhost;

    location / {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
EOF

ln -s /etc/nginx/sites-available/cannabis_app /etc/nginx/sites-enabled/
nginx -t && systemctl restart nginx

# 8. Anwendung starten
echo ">>> Anwendung starten..."
cd /var/www/cannabis_app
gunicorn -c gunicorn_config.py app:app --daemon

echo "=== Installation abgeschlossen! Besuchen Sie http://<Server-IP>, um die Anwendung zu sehen. ==="
